package main

import(
  "net"
  "log"
  "bufio"
  "fmt"
  "time"
  "io/ioutil"
  "encoding/binary"
)

const SERVER_IP   string = "140.112.42.47"
const SERVER_PORT string = ":8080"
var SECRET_1    []byte = []byte{0xde, 0xed, 0xbe, 0xef, 0xfa, 0xce, 0xb0, 0x0c}

func main(){
  // Connect
  log.Println("Connecting...")
  conn, err := net.Dial("tcp", SERVER_IP + SERVER_PORT)
  if err != nil {
    log.Fatal(err)
  }
  cr := ccReader{bufio.NewReader(conn)}

  // Send secret_1
  log.Println("Sending secret_1...")
  if _, err := conn.Write(SECRET_1); err != nil {
    log.Fatal("Write failed.")
  }

  // Receive secret_2
  log.Println("Receiving secret_2...")
  secret := cr.ReadBytes(8)
  XOR(SECRET_1, secret)
  log.Println("Secret: ", secret)

  // send screenshot
  for i:=1; i<=5; i++ {
    log.Printf("Sending screenshot%d.png...\n", i)
    sendFile(conn, secret, fmt.Sprintf("screenshot%d.png", i))
    log.Println("Sent.")
    time.Sleep(20*time.Second)
  }
}

func sendFile(conn net.Conn, key []byte, filename string){
  // read file
  file, err := ioutil.ReadFile("./image/" + filename)
  if err != nil {
    log.Fatal(err)
  }

  // send filename with length
  filename_b := []byte(filename)
  filenamelen_b := make([]byte, 4)
  binary.LittleEndian.PutUint32(filenamelen_b, uint32(len(filename_b)))
  XOR(key, filenamelen_b)
  XOR(key, filename_b)
  conn.Write(filenamelen_b)
  conn.Write(filename_b)

  // send file content with length
  filelen_b := make([]byte, 4)
  binary.LittleEndian.PutUint32(filelen_b, uint32(len(file)))
  XOR(key, filelen_b)
  XOR(key, file)
  conn.Write(filelen_b)
  conn.Write(file)
}

func XOR(key, text []byte){
  for i:=0; i<len(text); i++ {
    text[i] = text[i] ^ key[i%len(key)]
  }
}

